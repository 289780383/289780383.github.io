function mxParallelEdgeLayout(t){mxGraphLayout.call(this,t)}mxParallelEdgeLayout.prototype=new mxGraphLayout,mxParallelEdgeLayout.prototype.constructor=mxParallelEdgeLayout,mxParallelEdgeLayout.prototype.spacing=20,mxParallelEdgeLayout.prototype.execute=function(t){var e=this.findParallels(t);this.graph.model.beginUpdate();try{for(var l in e){var a=e[l];a.length>1&&this.layout(a)}}finally{this.graph.model.endUpdate()}},mxParallelEdgeLayout.prototype.findParallels=function(t){for(var e=this.graph.getModel(),l=[],a=e.getChildCount(t),i=0;i<a;i++){var r=e.getChildAt(t,i);if(!this.isEdgeIgnored(r)){var o=this.getEdgeId(r);null!=o&&(null==l[o]&&(l[o]=[]),l[o].push(r))}}return l},mxParallelEdgeLayout.prototype.getEdgeId=function(t){var e=this.graph.getView(),l=e.getVisibleTerminal(t,!0),a=e.getVisibleTerminal(t,!1);return null!=l&&null!=a?(l=mxObjectIdentity.get(l))>(a=mxObjectIdentity.get(a))?a+"-"+l:l+"-"+a:null},mxParallelEdgeLayout.prototype.layout=function(t){var e=t[0],l=this.graph.getView(),a=this.graph.getModel(),i=a.getGeometry(l.getVisibleTerminal(e,!0)),r=a.getGeometry(l.getVisibleTerminal(e,!1));if(i==r)for(var o=i.x+i.width+this.spacing,g=i.y+i.height/2,n=0;n<t.length;n++)this.route(t[n],o,g),o+=this.spacing;else if(null!=i&&null!=r){var h=i.x+i.width/2,s=i.y+i.height/2,u=r.x+r.width/2-h,d=r.y+r.height/2-s,p=Math.sqrt(u*u+d*d);if(p>0){o=h+u/2,g=s+d/2;var y=d*this.spacing/p,m=u*this.spacing/p;o+=y*(t.length-1)/2,g-=m*(t.length-1)/2;for(n=0;n<t.length;n++)this.route(t[n],o,g),o-=y,g+=m}}},mxParallelEdgeLayout.prototype.route=function(t,e,l){this.graph.isCellMovable(t)&&this.setEdgePoints(t,[new mxPoint(e,l)])};