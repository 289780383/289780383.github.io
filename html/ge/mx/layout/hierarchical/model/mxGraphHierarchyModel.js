function mxGraphHierarchyModel(e,t,r,a,n){e.getGraph();this.tightenToSource=n,this.roots=r,this.parent=a,this.vertexMapper=new mxDictionary,this.edgeMapper=new mxDictionary,this.maxRank=0;var h=[];null==t&&(t=this.graph.getChildVertices(a)),this.maxRank=this.SOURCESCANSTARTRANK,this.createInternalCells(e,t,h);for(var s=0;s<t.length;s++){for(var l=h[s].connectsAsSource,o=0;o<l.length;o++){var i=l[o],p=i.edges;if(null!=p&&p.length>0){var c=p[0],g=e.getVisibleTerminal(c,!1),m=this.vertexMapper.get(g);h[s]==m&&(g=e.getVisibleTerminal(c,!0),m=this.vertexMapper.get(g)),null!=m&&h[s]!=m&&(i.target=m,0==m.connectsAsTarget.length&&(m.connectsAsTarget=[]),mxUtils.indexOf(m.connectsAsTarget,i)<0&&m.connectsAsTarget.push(i))}}h[s].temp[0]=1}}mxGraphHierarchyModel.prototype.maxRank=null,mxGraphHierarchyModel.prototype.vertexMapper=null,mxGraphHierarchyModel.prototype.edgeMapper=null,mxGraphHierarchyModel.prototype.ranks=null,mxGraphHierarchyModel.prototype.roots=null,mxGraphHierarchyModel.prototype.parent=null,mxGraphHierarchyModel.prototype.dfsCount=0,mxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK=1e8,mxGraphHierarchyModel.prototype.tightenToSource=!1,mxGraphHierarchyModel.prototype.createInternalCells=function(e,t,r){for(var a=e.getGraph(),n=0;n<t.length;n++){r[n]=new mxGraphHierarchyNode(t[n]),this.vertexMapper.put(t[n],r[n]);var h=e.getEdges(t[n]);r[n].connectsAsSource=[];for(var s=0;s<h.length;s++){var l=e.getVisibleTerminal(h[s],!1);if(l!=t[n]&&e.graph.model.isVertex(l)&&!e.isVertexIgnored(l)){var o=e.getEdgesBetween(t[n],l,!1),i=e.getEdgesBetween(t[n],l,!0);if(null!=o&&o.length>0&&null==this.edgeMapper.get(o[0])&&2*i.length>=o.length){for(var p=new mxGraphHierarchyEdge(o),c=0;c<o.length;c++){var g=o[c];this.edgeMapper.put(g,p),a.resetEdge(g),e.disableEdgeStyle&&(e.setEdgeStyleEnabled(g,!1),e.setOrthogonalEdge(g,!0))}p.source=r[n],mxUtils.indexOf(r[n].connectsAsSource,p)<0&&r[n].connectsAsSource.push(p)}}}r[n].temp[0]=0}},mxGraphHierarchyModel.prototype.initialRank=function(){var e=[];if(null!=this.roots)for(var t=0;t<this.roots.length;t++){null!=(i=this.vertexMapper.get(this.roots[t]))&&e.push(i)}var r=this.vertexMapper.getValues();for(t=0;t<r.length;t++)r[t].temp[0]=-1;for(var a=e.slice();e.length>0;){var n;c=(i=e[0]).connectsAsTarget,n=i.connectsAsSource;var h=!0,s=this.SOURCESCANSTARTRANK;for(t=0;t<c.length;t++){if(5270620!=(m=c[t]).temp[0]){h=!1;break}var l=m.source;s=Math.min(s,l.temp[0]-1)}if(h){if(i.temp[0]=s,this.maxRank=Math.min(this.maxRank,s),null!=n)for(t=0;t<n.length;t++){(m=n[t]).temp[0]=5270620,-1==(l=m.target).temp[0]&&(e.push(l),l.temp[0]=-2)}e.shift()}else{var o=e.shift();if(e.push(i),o==i&&1==e.length)break}}for(t=0;t<r.length;t++)r[t].temp[0]-=this.maxRank;for(t=0;t<a.length;t++)for(var i,p=0,c=(i=a[t]).connectsAsSource,g=0;g<c.length;g++){var m;l=(m=c[g]).target;i.temp[0]=Math.max(p,l.temp[0]+1),p=i.temp[0]}this.maxRank=this.SOURCESCANSTARTRANK-this.maxRank},mxGraphHierarchyModel.prototype.fixRanks=function(){var e=[];this.ranks=[];for(var t=0;t<this.maxRank+1;t++)e[t]=[],this.ranks[t]=e[t];var r=null;if(null!=this.roots){var a=this.roots;r=[];for(t=0;t<a.length;t++){var n=a[t],h=this.vertexMapper.get(n);r[t]=h}}this.visit(function(t,r,a,n,h){if((0==h&&r.maxRank<0&&r.minRank<0&&(e[r.temp[0]].push(r),r.maxRank=r.temp[0],r.minRank=r.temp[0],r.temp[0]=e[r.maxRank].length-1),null!=t&&null!=a)&&t.maxRank-r.maxRank>1){a.maxRank=t.maxRank,a.minRank=r.maxRank,a.temp=[],a.x=[],a.y=[];for(var s=a.minRank+1;s<a.maxRank;s++)e[s].push(a),a.setGeneralPurposeVariable(s,e[s].length-1)}},r,!1,null)},mxGraphHierarchyModel.prototype.visit=function(e,t,r,a){if(null!=t){for(var n=0;n<t.length;n++){var h=t[n];null!=h&&(null==a&&(a=new Object),r?(h.hashCode=[],h.hashCode[0]=this.dfsCount,h.hashCode[1]=n,this.extendedDfs(null,h,null,e,a,h.hashCode,n,0)):this.dfs(null,h,null,e,a,0))}this.dfsCount++}},mxGraphHierarchyModel.prototype.dfs=function(e,t,r,a,n,h){if(null!=t){var s=t.id;if(null==n[s]){n[s]=t,a(e,t,r,h,0);for(var l=t.connectsAsSource.slice(),o=0;o<l.length;o++){var i=l[o],p=i.target;this.dfs(t,p,i,a,n,h+1)}}else a(e,t,r,h,1)}},mxGraphHierarchyModel.prototype.extendedDfs=function(e,t,r,a,n,h,s,l){if(null!=t){if(null!=e&&(null==t.hashCode||t.hashCode[0]!=e.hashCode[0])){var o=e.hashCode.length+1;t.hashCode=e.hashCode.slice(),t.hashCode[o-1]=s}var i=t.id;if(null==n[i]){n[i]=t,a(e,t,r,l,0);for(var p=t.connectsAsSource.slice(),c=0;c<p.length;c++){var g=p[c],m=g.target;this.extendedDfs(t,m,g,a,n,t.hashCode,c,l+1)}}else a(e,t,r,l,1)}};