function mxPolyline(t,n,e){mxShape.call(this),this.points=t,this.stroke=n,this.strokewidth=null!=e?e:1}mxUtils.extend(mxPolyline,mxShape),mxPolyline.prototype.getRotation=function(){return 0},mxPolyline.prototype.getShapeRotation=function(){return 0},mxPolyline.prototype.isPaintBoundsInverted=function(){return!1},mxPolyline.prototype.paintEdgeShape=function(t,n){var e=t.pointerEventsValue;t.pointerEventsValue="stroke",null==this.style||1!=this.style[mxConstants.STYLE_CURVED]?this.paintLine(t,n,this.isRounded):this.paintCurvedLine(t,n),t.pointerEventsValue=e},mxPolyline.prototype.paintLine=function(t,n,e){var o=mxUtils.getValue(this.style,mxConstants.STYLE_ARCSIZE,mxConstants.LINE_ARCSIZE)/2;t.begin(),this.addPoints(t,n,e,o,!1),t.stroke()},mxPolyline.prototype.paintCurvedLine=function(t,n){t.begin();var e=n[0],o=n.length;t.moveTo(e.x,e.y);for(var i=1;i<o-2;i++){var s=n[i],l=n[i+1],r=(s.x+l.x)/2,a=(s.y+l.y)/2;t.quadTo(s.x,s.y,r,a)}s=n[o-2],l=n[o-1];t.quadTo(s.x,s.y,l.x,l.y),t.stroke()};