function mxFastOrganicLayout(t){mxGraphLayout.call(this,t)}mxFastOrganicLayout.prototype=new mxGraphLayout,mxFastOrganicLayout.prototype.constructor=mxFastOrganicLayout,mxFastOrganicLayout.prototype.useInputOrigin=!0,mxFastOrganicLayout.prototype.resetEdges=!0,mxFastOrganicLayout.prototype.disableEdgeStyle=!0,mxFastOrganicLayout.prototype.forceConstant=50,mxFastOrganicLayout.prototype.forceConstantSquared=0,mxFastOrganicLayout.prototype.minDistanceLimit=2,mxFastOrganicLayout.prototype.maxDistanceLimit=500,mxFastOrganicLayout.prototype.minDistanceLimitSquared=4,mxFastOrganicLayout.prototype.initialTemp=200,mxFastOrganicLayout.prototype.temperature=0,mxFastOrganicLayout.prototype.maxIterations=0,mxFastOrganicLayout.prototype.iteration=0,mxFastOrganicLayout.prototype.vertexArray,mxFastOrganicLayout.prototype.dispX,mxFastOrganicLayout.prototype.dispY,mxFastOrganicLayout.prototype.cellLocation,mxFastOrganicLayout.prototype.radius,mxFastOrganicLayout.prototype.radiusSquared,mxFastOrganicLayout.prototype.isMoveable,mxFastOrganicLayout.prototype.neighbours,mxFastOrganicLayout.prototype.indices,mxFastOrganicLayout.prototype.allowedToRun=!0,mxFastOrganicLayout.prototype.isVertexIgnored=function(t){return mxGraphLayout.prototype.isVertexIgnored.apply(this,arguments)||0==this.graph.getConnections(t).length},mxFastOrganicLayout.prototype.execute=function(t){var i=this.graph.getModel();this.vertexArray=[];for(var a=this.graph.getChildVertices(t),s=0;s<a.length;s++)this.isVertexIgnored(a[s])||this.vertexArray.push(a[s]);var e=this.useInputOrigin?this.graph.getBoundingBoxFromGeometry(this.vertexArray):null,r=this.vertexArray.length;this.indices=[],this.dispX=[],this.dispY=[],this.cellLocation=[],this.isMoveable=[],this.neighbours=[],this.radius=[],this.radiusSquared=[],this.forceConstant<.001&&(this.forceConstant=.001),this.forceConstantSquared=this.forceConstant*this.forceConstant;for(s=0;s<this.vertexArray.length;s++){var o=this.vertexArray[s];this.cellLocation[s]=[];var n=mxObjectIdentity.get(o);this.indices[n]=s;var h=(x=this.getVertexBounds(o)).width,c=x.height,p=x.x,u=x.y;this.cellLocation[s][0]=p+h/2,this.cellLocation[s][1]=u+c/2,this.radius[s]=Math.min(h,c),this.radiusSquared[s]=this.radius[s]*this.radius[s]}i.beginUpdate();try{for(s=0;s<r;s++){this.dispX[s]=0,this.dispY[s]=0,this.isMoveable[s]=this.isVertexMovable(this.vertexArray[s]);var l=this.graph.getConnections(this.vertexArray[s],t);a=this.graph.getOpposites(l,this.vertexArray[s]);this.neighbours[s]=[];for(var y=0;y<a.length;y++){this.resetEdges&&this.graph.resetEdge(l[y]),this.disableEdgeStyle&&this.setEdgeStyleEnabled(l[y],!1);n=mxObjectIdentity.get(a[y]);var g=this.indices[n];this.neighbours[s][y]=null!=g?g:s}}for(this.temperature=this.initialTemp,0==this.maxIterations&&(this.maxIterations=20*Math.sqrt(r)),this.iteration=0;this.iteration<this.maxIterations;this.iteration++){if(!this.allowedToRun)return;this.calcRepulsion(),this.calcAttraction(),this.calcPositions(),this.reduceTemperature()}var d=null,m=null;for(s=0;s<this.vertexArray.length;s++){var x;o=this.vertexArray[s];if(this.isVertexMovable(o))if(null!=(x=this.getVertexBounds(o))){this.cellLocation[s][0]-=x.width/2,this.cellLocation[s][1]-=x.height/2;p=this.graph.snap(Math.round(this.cellLocation[s][0])),u=this.graph.snap(Math.round(this.cellLocation[s][1]));this.setVertexLocation(o,p,u),d=null==d?p:Math.min(d,p),m=null==m?u:Math.min(m,u)}}var L=1-(d||0),v=1-(m||0);null!=e&&(L+=e.x,v+=e.y),this.graph.moveCells(this.vertexArray,L,v)}finally{i.endUpdate()}},mxFastOrganicLayout.prototype.calcPositions=function(){for(var t=0;t<this.vertexArray.length;t++)if(this.isMoveable[t]){var i=Math.sqrt(this.dispX[t]*this.dispX[t]+this.dispY[t]*this.dispY[t]);i<.001&&(i=.001);var a=this.dispX[t]/i*Math.min(i,this.temperature),s=this.dispY[t]/i*Math.min(i,this.temperature);this.dispX[t]=0,this.dispY[t]=0,this.cellLocation[t][0]+=a,this.cellLocation[t][1]+=s}},mxFastOrganicLayout.prototype.calcAttraction=function(){for(var t=0;t<this.vertexArray.length;t++)for(var i=0;i<this.neighbours[t].length;i++){var a=this.neighbours[t][i];if(t!=a&&this.isMoveable[t]&&this.isMoveable[a]){var s=this.cellLocation[t][0]-this.cellLocation[a][0],e=this.cellLocation[t][1]-this.cellLocation[a][1],r=s*s+e*e-this.radiusSquared[t]-this.radiusSquared[a];r<this.minDistanceLimitSquared&&(r=this.minDistanceLimitSquared);var o=Math.sqrt(r),n=r/this.forceConstant,h=s/o*n,c=e/o*n;this.dispX[t]-=h,this.dispY[t]-=c,this.dispX[a]+=h,this.dispY[a]+=c}}},mxFastOrganicLayout.prototype.calcRepulsion=function(){for(var t=this.vertexArray.length,i=0;i<t;i++)for(var a=i;a<t;a++){if(!this.allowedToRun)return;if(a!=i&&this.isMoveable[i]&&this.isMoveable[a]){var s=this.cellLocation[i][0]-this.cellLocation[a][0],e=this.cellLocation[i][1]-this.cellLocation[a][1];0==s&&(s=.01+Math.random()),0==e&&(e=.01+Math.random());var r=Math.sqrt(s*s+e*e),o=r-this.radius[i]-this.radius[a];if(o>this.maxDistanceLimit)continue;o<this.minDistanceLimit&&(o=this.minDistanceLimit);var n=this.forceConstantSquared/o,h=s/r*n,c=e/r*n;this.dispX[i]+=h,this.dispY[i]+=c,this.dispX[a]-=h,this.dispY[a]-=c}}},mxFastOrganicLayout.prototype.reduceTemperature=function(){this.temperature=this.initialTemp*(1-this.iteration/this.maxIterations)};